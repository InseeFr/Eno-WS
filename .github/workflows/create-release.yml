name: Create Eno-WS XML release

on:
  push:
    branches:
      - 'main'
    paths-ignore:
      - 'docs/**'
      - 'README**.md'
      - 'LICENSE'
      - 'Dockerfile'
      - '.github/**'
      - 'renovate.json'

env:
  JAVA_VERSION: '17'

jobs:

  eno-lib:
    name: Check Eno lib version exists
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get-version.outputs.version }}
    steps:
      - uses: actions/checkout@v4

      - name: Get Eno Version
        id: get-version
        run: echo "version=$(mvn help:evaluate -Dexpression=eno.version -q -DforceStdout)" >> $GITHUB_OUTPUT
      
      - name: Check Eno lib tag v${{ steps.get-version.outputs.version }} existence
        id: check-tag-exists
        uses: mukunku/tag-exists-action@v1.6.0
        with:
          repo: InseeFr/Eno
          tag: "v${{ steps.get-version.outputs.version }}"

      - name: Eno lib tag verification
        id: check-tag
        run: |
          if [[ "${{ steps.check-tag-exists.outputs.exists }}" == "false" ]]; then
            echo "The tag v${{ steps.get-version.outputs.version }} doesn't exist in Eno lib repo."
            exit 1
          fi

  check-version:
    needs: eno-lib
    runs-on: ubuntu-latest
    outputs:
      release-version: ${{ steps.version.outputs.version }}
    steps:
      - uses: actions/checkout@v4

      - name: Get version
        id: version
        run: echo "version=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_OUTPUT

      - name: Check Eno WS tag ${{ steps.version.outputs.version }} existence
        id: check-tag-exists
        uses: mukunku/tag-exists-action@v1.6.0
        with:
          tag: ${{ steps.version.outputs.version }}

      - name: Eno WS tag verification
        id: check-tag
        run: |
          if ! [[ "${{ steps.version.outputs.version }}" =~ ^2.[0-9]+.[0-9]+$ ]]; then
            echo "Version on v2-main ${{ steps.version.outputs.version }} branch does not match the format 2.Y.Z"
            exit 1
          fi

          if [[ "${{ steps.check-tag-exists.outputs.exists }}" == "true" ]]; then
            echo "Nothing to tag/release, the tag ${{ steps.version.outputs.version }} already exists"
            exit 1
          fi

  publish-docker:
    needs: [ eno-lib, check-version ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ env.JAVA_VERSION }}

      - name: Checkout Eno lib repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          ref: "v${{ needs.eno-lib.outputs.version }}"
          repository: InseeFr/Eno
          path: Eno

      - name: Build Eno lib
        working-directory: ./Eno
        run: mvn --batch-mode clean process-classes install --no-transfer-progress -DskipTests=true -Dmaven.javadoc.skip=true

      - name: Build Eno-WS
        run: mvn --batch-mode clean package --no-transfer-progress

      - name: Publish to Registry
        uses: elgohr/Publish-Docker-Github-Action@v5
        with:
          name: inseefr/eno-ws
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          tags: ${{ needs.check-version.outputs.release-version }}

  create-release:
    needs: [ eno-lib, check-version, publish-docker ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Create GitHub release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.check-version.outputs.release-version }}
          target_commitish: ${{ github.head_ref || github.ref }}
          name: ${{ needs.check-version.outputs.release-version }}
          body: "Eno-WS XML version ${{ needs.check-version.outputs.release-version }} (Eno lib version ${{ needs.eno-lib.outputs.version }})"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
